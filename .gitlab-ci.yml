stages:
  - image-build
  - deploy
  - deploy-prod

fe-landing-image-build:
  stage: image-build
  image:
    name: mgit/base:kaniko-executor-debug-stable
    entrypoint: [""]
  script:
    - set
    - export CI_REGISTRY_DOCKER="index.docker.io"
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY_DOCKER}\":{\"auth\":\"$(echo -n $dockerHubUsername:$dockerHubPassword| base64)\"}}}" > /kaniko/.docker/config.json
    - cat /kaniko/.docker/config.json
    - /kaniko/executor  --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg envFile=$ENV_FILE --insecure --skip-tls-verify  --destination onsual/fe-landing:${TAG}
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+-prod-fe-landing$/'
      variables:
        ENV_FILE: .env.prod
        TAG: ${CI_COMMIT_TAG}
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_COMMIT_BRANCH == "test"'
      variables:
        ENV_FILE: .env.test
        TAG: ${CI_COMMIT_SHORT_SHA}
  tags:
    - test

fe-landing-image-deploy-test:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - cd deploy
    - cd test
    - IMAGE_WITH_COMMIT="onsual/fe-landing:$CI_COMMIT_SHORT_SHA"
    - sed -i "s#onsual/fe-landing:.*#$IMAGE_WITH_COMMIT#g" deployment.yaml
    - kubectl apply -f . -n test
    - kubectl rollout restart deployment -n test fe-landing
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "test" && $CI_COMMIT_TAG != "~ /^v\d+\.\d+\.\d+-prod-fe-landing$/"'
  tags:
    - test

fe-landing-image-deploy-prod:
  stage: deploy-prod
  image: dtzar/helm-kubectl
  script:
    - cd deploy
    - cd prod
    - IMAGE_WITH_COMMIT="onsual/fe-landing:$CI_COMMIT_TAG"
    - sed -i "s#onsual/fe-landing:.*#$IMAGE_WITH_COMMIT#g" deployment.yaml
    - kubectl apply -f . -n prod
    - kubectl rollout restart deployment -n prod fe-landing
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+-prod-fe-landing$/
  tags:
    - test